// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: spacex/api/device/wifi.proto

package device

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WifiClient_Interface int32

const (
	WifiClient_UNKNOWN WifiClient_Interface = 0
	WifiClient_ETH     WifiClient_Interface = 1
	WifiClient_RF_2GHZ WifiClient_Interface = 2
	WifiClient_RF_5GHZ WifiClient_Interface = 3
)

// Enum value maps for WifiClient_Interface.
var (
	WifiClient_Interface_name = map[int32]string{
		0: "UNKNOWN",
		1: "ETH",
		2: "RF_2GHZ",
		3: "RF_5GHZ",
	}
	WifiClient_Interface_value = map[string]int32{
		"UNKNOWN": 0,
		"ETH":     1,
		"RF_2GHZ": 2,
		"RF_5GHZ": 3,
	}
)

func (x WifiClient_Interface) Enum() *WifiClient_Interface {
	p := new(WifiClient_Interface)
	*p = x
	return p
}

func (x WifiClient_Interface) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiClient_Interface) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_wifi_proto_enumTypes[0].Descriptor()
}

func (WifiClient_Interface) Type() protoreflect.EnumType {
	return &file_spacex_api_device_wifi_proto_enumTypes[0]
}

func (x WifiClient_Interface) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiClient_Interface.Descriptor instead.
func (WifiClient_Interface) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{13, 0}
}

type WifiScanResults_Network_Source int32

const (
	WifiScanResults_Network_UNKNOWN     WifiScanResults_Network_Source = 0
	WifiScanResults_Network_SCAN_2_4GHZ WifiScanResults_Network_Source = 1
	WifiScanResults_Network_SCAN_5GHZ   WifiScanResults_Network_Source = 2
)

// Enum value maps for WifiScanResults_Network_Source.
var (
	WifiScanResults_Network_Source_name = map[int32]string{
		0: "UNKNOWN",
		1: "SCAN_2_4GHZ",
		2: "SCAN_5GHZ",
	}
	WifiScanResults_Network_Source_value = map[string]int32{
		"UNKNOWN":     0,
		"SCAN_2_4GHZ": 1,
		"SCAN_5GHZ":   2,
	}
)

func (x WifiScanResults_Network_Source) Enum() *WifiScanResults_Network_Source {
	p := new(WifiScanResults_Network_Source)
	*p = x
	return p
}

func (x WifiScanResults_Network_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiScanResults_Network_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_wifi_proto_enumTypes[1].Descriptor()
}

func (WifiScanResults_Network_Source) Type() protoreflect.EnumType {
	return &file_spacex_api_device_wifi_proto_enumTypes[1]
}

func (x WifiScanResults_Network_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiScanResults_Network_Source.Descriptor instead.
func (WifiScanResults_Network_Source) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{25, 0, 0}
}

type WifiNetwork_Band int32

const (
	WifiNetwork_WIFI_UNKNOWN WifiNetwork_Band = 0
	WifiNetwork_WIFI_2_4GHZ  WifiNetwork_Band = 1
	WifiNetwork_WIFI_5GHZ    WifiNetwork_Band = 2
)

// Enum value maps for WifiNetwork_Band.
var (
	WifiNetwork_Band_name = map[int32]string{
		0: "WIFI_UNKNOWN",
		1: "WIFI_2_4GHZ",
		2: "WIFI_5GHZ",
	}
	WifiNetwork_Band_value = map[string]int32{
		"WIFI_UNKNOWN": 0,
		"WIFI_2_4GHZ":  1,
		"WIFI_5GHZ":    2,
	}
)

func (x WifiNetwork_Band) Enum() *WifiNetwork_Band {
	p := new(WifiNetwork_Band)
	*p = x
	return p
}

func (x WifiNetwork_Band) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiNetwork_Band) Descriptor() protoreflect.EnumDescriptor {
	return file_spacex_api_device_wifi_proto_enumTypes[2].Descriptor()
}

func (WifiNetwork_Band) Type() protoreflect.EnumType {
	return &file_spacex_api_device_wifi_proto_enumTypes[2]
}

func (x WifiNetwork_Band) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WifiNetwork_Band.Descriptor instead.
func (WifiNetwork_Band) EnumDescriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{26, 0}
}

type MeshState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth                MeshAuth `protobuf:"varint,1,opt,name=auth,proto3,enum=SpaceX.API.Device.MeshAuth" json:"auth,omitempty"`
	SecondsSinceContact uint32   `protobuf:"varint,2,opt,name=seconds_since_contact,json=secondsSinceContact,proto3" json:"seconds_since_contact,omitempty"`
}

func (x *MeshState) Reset() {
	*x = MeshState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeshState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshState) ProtoMessage() {}

func (x *MeshState) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshState.ProtoReflect.Descriptor instead.
func (*MeshState) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{0}
}

func (x *MeshState) GetAuth() MeshAuth {
	if x != nil {
		return x.Auth
	}
	return MeshAuth_MESH_AUTH_UNKNOWN
}

func (x *MeshState) GetSecondsSinceContact() uint32 {
	if x != nil {
		return x.SecondsSinceContact
	}
	return 0
}

type WifiSetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiConfig *WifiConfig `protobuf:"bytes,1,opt,name=wifi_config,json=wifiConfig,proto3" json:"wifi_config,omitempty"`
}

func (x *WifiSetConfigRequest) Reset() {
	*x = WifiSetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiSetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetConfigRequest) ProtoMessage() {}

func (x *WifiSetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetConfigRequest.ProtoReflect.Descriptor instead.
func (*WifiSetConfigRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{1}
}

func (x *WifiSetConfigRequest) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

type WifiSetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedWifiConfig *WifiConfig `protobuf:"bytes,1,opt,name=updated_wifi_config,json=updatedWifiConfig,proto3" json:"updated_wifi_config,omitempty"`
}

func (x *WifiSetConfigResponse) Reset() {
	*x = WifiSetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiSetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetConfigResponse) ProtoMessage() {}

func (x *WifiSetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetConfigResponse.ProtoReflect.Descriptor instead.
func (*WifiSetConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{2}
}

func (x *WifiSetConfigResponse) GetUpdatedWifiConfig() *WifiConfig {
	if x != nil {
		return x.UpdatedWifiConfig
	}
	return nil
}

type WifiGetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiGetConfigRequest) Reset() {
	*x = WifiGetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetConfigRequest) ProtoMessage() {}

func (x *WifiGetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetConfigRequest.ProtoReflect.Descriptor instead.
func (*WifiGetConfigRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{3}
}

type WifiGetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiConfig *WifiConfig `protobuf:"bytes,1,opt,name=wifi_config,json=wifiConfig,proto3" json:"wifi_config,omitempty"`
}

func (x *WifiGetConfigResponse) Reset() {
	*x = WifiGetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetConfigResponse) ProtoMessage() {}

func (x *WifiGetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetConfigResponse.ProtoReflect.Descriptor instead.
func (*WifiGetConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{4}
}

func (x *WifiGetConfigResponse) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

type WifiGetNetworkConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiGetNetworkConfigRequest) Reset() {
	*x = WifiGetNetworkConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetNetworkConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetNetworkConfigRequest) ProtoMessage() {}

func (x *WifiGetNetworkConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetNetworkConfigRequest.ProtoReflect.Descriptor instead.
func (*WifiGetNetworkConfigRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{5}
}

type WifiGetNetworkConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiConfig *WifiConfig `protobuf:"bytes,1,opt,name=wifi_config,json=wifiConfig,proto3" json:"wifi_config,omitempty"`
}

func (x *WifiGetNetworkConfigResponse) Reset() {
	*x = WifiGetNetworkConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetNetworkConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetNetworkConfigResponse) ProtoMessage() {}

func (x *WifiGetNetworkConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetNetworkConfigResponse.ProtoReflect.Descriptor instead.
func (*WifiGetNetworkConfigResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{6}
}

func (x *WifiGetNetworkConfigResponse) GetWifiConfig() *WifiConfig {
	if x != nil {
		return x.WifiConfig
	}
	return nil
}

type WifiSetMeshDeviceTrustRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Auth     MeshAuth `protobuf:"varint,2,opt,name=auth,proto3,enum=SpaceX.API.Device.MeshAuth" json:"auth,omitempty"`
}

func (x *WifiSetMeshDeviceTrustRequest) Reset() {
	*x = WifiSetMeshDeviceTrustRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiSetMeshDeviceTrustRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetMeshDeviceTrustRequest) ProtoMessage() {}

func (x *WifiSetMeshDeviceTrustRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetMeshDeviceTrustRequest.ProtoReflect.Descriptor instead.
func (*WifiSetMeshDeviceTrustRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{7}
}

func (x *WifiSetMeshDeviceTrustRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WifiSetMeshDeviceTrustRequest) GetAuth() MeshAuth {
	if x != nil {
		return x.Auth
	}
	return MeshAuth_MESH_AUTH_UNKNOWN
}

type WifiSetMeshDeviceTrustResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiSetMeshDeviceTrustResponse) Reset() {
	*x = WifiSetMeshDeviceTrustResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiSetMeshDeviceTrustResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetMeshDeviceTrustResponse) ProtoMessage() {}

func (x *WifiSetMeshDeviceTrustResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetMeshDeviceTrustResponse.ProtoReflect.Descriptor instead.
func (*WifiSetMeshDeviceTrustResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{8}
}

type WifiGetClientsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiGetClientsRequest) Reset() {
	*x = WifiGetClientsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetClientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetClientsRequest) ProtoMessage() {}

func (x *WifiGetClientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetClientsRequest.ProtoReflect.Descriptor instead.
func (*WifiGetClientsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{9}
}

type WifiGetClientsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clients []*WifiClient `protobuf:"bytes,1,rep,name=clients,proto3" json:"clients,omitempty"`
}

func (x *WifiGetClientsResponse) Reset() {
	*x = WifiGetClientsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetClientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetClientsResponse) ProtoMessage() {}

func (x *WifiGetClientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetClientsResponse.ProtoReflect.Descriptor instead.
func (*WifiGetClientsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{10}
}

func (x *WifiGetClientsResponse) GetClients() []*WifiClient {
	if x != nil {
		return x.Clients
	}
	return nil
}

type WifiGetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       uint64    `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PingDropRate  []float32 `protobuf:"fixed32,1001,rep,packed,name=ping_drop_rate,json=pingDropRate,proto3" json:"ping_drop_rate,omitempty"`
	PingLatencyMs []float32 `protobuf:"fixed32,1002,rep,packed,name=ping_latency_ms,json=pingLatencyMs,proto3" json:"ping_latency_ms,omitempty"`
}

func (x *WifiGetHistoryResponse) Reset() {
	*x = WifiGetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetHistoryResponse) ProtoMessage() {}

func (x *WifiGetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetHistoryResponse.ProtoReflect.Descriptor instead.
func (*WifiGetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{11}
}

func (x *WifiGetHistoryResponse) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *WifiGetHistoryResponse) GetPingDropRate() []float32 {
	if x != nil {
		return x.PingDropRate
	}
	return nil
}

func (x *WifiGetHistoryResponse) GetPingLatencyMs() []float32 {
	if x != nil {
		return x.PingLatencyMs
	}
	return nil
}

type WifiNewClientConnectedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Client *WifiClient `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *WifiNewClientConnectedEvent) Reset() {
	*x = WifiNewClientConnectedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiNewClientConnectedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNewClientConnectedEvent) ProtoMessage() {}

func (x *WifiNewClientConnectedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNewClientConnectedEvent.ProtoReflect.Descriptor instead.
func (*WifiNewClientConnectedEvent) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{12}
}

func (x *WifiNewClientConnectedEvent) GetClient() *WifiClient {
	if x != nil {
		return x.Client
	}
	return nil
}

type WifiClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MacAddress      string               `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IpAddress       string               `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	SignalStrength  float32              `protobuf:"fixed32,4,opt,name=signal_strength,json=signalStrength,proto3" json:"signal_strength,omitempty"`
	ChannelWidth    uint32               `protobuf:"varint,12,opt,name=channel_width,json=channelWidth,proto3" json:"channel_width,omitempty"`
	RxStats         *WifiClient_RxStats  `protobuf:"bytes,5,opt,name=rx_stats,json=rxStats,proto3" json:"rx_stats,omitempty"`
	TxStats         *WifiClient_TxStats  `protobuf:"bytes,6,opt,name=tx_stats,json=txStats,proto3" json:"tx_stats,omitempty"`
	AssociatedTimeS uint32               `protobuf:"varint,7,opt,name=associated_time_s,json=associatedTimeS,proto3" json:"associated_time_s,omitempty"`
	ModeStr         string               `protobuf:"bytes,8,opt,name=mode_str,json=modeStr,proto3" json:"mode_str,omitempty"`
	Iface           WifiClient_Interface `protobuf:"varint,9,opt,name=iface,proto3,enum=SpaceX.API.Device.WifiClient_Interface" json:"iface,omitempty"`
	Snr             float32              `protobuf:"fixed32,10,opt,name=snr,proto3" json:"snr,omitempty"`
	Psmode          int32                `protobuf:"varint,11,opt,name=psmode,proto3" json:"psmode,omitempty"`
}

func (x *WifiClient) Reset() {
	*x = WifiClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient) ProtoMessage() {}

func (x *WifiClient) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient.ProtoReflect.Descriptor instead.
func (*WifiClient) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{13}
}

func (x *WifiClient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WifiClient) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *WifiClient) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *WifiClient) GetSignalStrength() float32 {
	if x != nil {
		return x.SignalStrength
	}
	return 0
}

func (x *WifiClient) GetChannelWidth() uint32 {
	if x != nil {
		return x.ChannelWidth
	}
	return 0
}

func (x *WifiClient) GetRxStats() *WifiClient_RxStats {
	if x != nil {
		return x.RxStats
	}
	return nil
}

func (x *WifiClient) GetTxStats() *WifiClient_TxStats {
	if x != nil {
		return x.TxStats
	}
	return nil
}

func (x *WifiClient) GetAssociatedTimeS() uint32 {
	if x != nil {
		return x.AssociatedTimeS
	}
	return 0
}

func (x *WifiClient) GetModeStr() string {
	if x != nil {
		return x.ModeStr
	}
	return ""
}

func (x *WifiClient) GetIface() WifiClient_Interface {
	if x != nil {
		return x.Iface
	}
	return WifiClient_UNKNOWN
}

func (x *WifiClient) GetSnr() float32 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *WifiClient) GetPsmode() int32 {
	if x != nil {
		return x.Psmode
	}
	return 0
}

type WifiSetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skip            bool   `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	NetworkName     string `protobuf:"bytes,2,opt,name=network_name,json=networkName,proto3" json:"network_name,omitempty"`
	NetworkPassword string `protobuf:"bytes,3,opt,name=network_password,json=networkPassword,proto3" json:"network_password,omitempty"`
}

func (x *WifiSetupRequest) Reset() {
	*x = WifiSetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiSetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetupRequest) ProtoMessage() {}

func (x *WifiSetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetupRequest.ProtoReflect.Descriptor instead.
func (*WifiSetupRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{14}
}

func (x *WifiSetupRequest) GetSkip() bool {
	if x != nil {
		return x.Skip
	}
	return false
}

func (x *WifiSetupRequest) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *WifiSetupRequest) GetNetworkPassword() string {
	if x != nil {
		return x.NetworkPassword
	}
	return ""
}

type WifiSetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiSetupResponse) Reset() {
	*x = WifiSetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiSetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiSetupResponse) ProtoMessage() {}

func (x *WifiSetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiSetupResponse.ProtoReflect.Descriptor instead.
func (*WifiSetupResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{15}
}

type WifiGetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfo           *DeviceInfo  `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	DeviceState          *DeviceState `protobuf:"bytes,4,opt,name=device_state,json=deviceState,proto3" json:"device_state,omitempty"`
	CaptivePortalEnabled bool         `protobuf:"varint,1,opt,name=captive_portal_enabled,json=captivePortalEnabled,proto3" json:"captive_portal_enabled,omitempty"`
	// Deprecated: Do not use.
	Clients                   []*WifiClient         `protobuf:"bytes,2,rep,name=clients,proto3" json:"clients,omitempty"`
	SerialNumber              string                `protobuf:"bytes,1001,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Sku                       string                `protobuf:"bytes,1002,opt,name=sku,proto3" json:"sku,omitempty"`
	Ipv4WanAddress            string                `protobuf:"bytes,1003,opt,name=ipv4_wan_address,json=ipv4WanAddress,proto3" json:"ipv4_wan_address,omitempty"`
	PingDropRate              float32               `protobuf:"fixed32,1004,opt,name=ping_drop_rate,json=pingDropRate,proto3" json:"ping_drop_rate,omitempty"`
	PingLatencyMs             float32               `protobuf:"fixed32,1005,opt,name=ping_latency_ms,json=pingLatencyMs,proto3" json:"ping_latency_ms,omitempty"`
	RxInvalidNwid_2Ghz_1MRate float32               `protobuf:"fixed32,1006,opt,name=rx_invalid_nwid_2ghz_1m_rate,json=rxInvalidNwid2ghz1mRate,proto3" json:"rx_invalid_nwid_2ghz_1m_rate,omitempty"`
	RxInvalidNwid_5Ghz_1MRate float32               `protobuf:"fixed32,1007,opt,name=rx_invalid_nwid_5ghz_1m_rate,json=rxInvalidNwid5ghz1mRate,proto3" json:"rx_invalid_nwid_5ghz_1m_rate,omitempty"`
	MeshStates                map[string]*MeshState `protobuf:"bytes,5,rep,name=mesh_states,json=meshStates,proto3" json:"mesh_states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WifiGetStatusResponse) Reset() {
	*x = WifiGetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetStatusResponse) ProtoMessage() {}

func (x *WifiGetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetStatusResponse.ProtoReflect.Descriptor instead.
func (*WifiGetStatusResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{16}
}

func (x *WifiGetStatusResponse) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

func (x *WifiGetStatusResponse) GetDeviceState() *DeviceState {
	if x != nil {
		return x.DeviceState
	}
	return nil
}

func (x *WifiGetStatusResponse) GetCaptivePortalEnabled() bool {
	if x != nil {
		return x.CaptivePortalEnabled
	}
	return false
}

// Deprecated: Do not use.
func (x *WifiGetStatusResponse) GetClients() []*WifiClient {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *WifiGetStatusResponse) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *WifiGetStatusResponse) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *WifiGetStatusResponse) GetIpv4WanAddress() string {
	if x != nil {
		return x.Ipv4WanAddress
	}
	return ""
}

func (x *WifiGetStatusResponse) GetPingDropRate() float32 {
	if x != nil {
		return x.PingDropRate
	}
	return 0
}

func (x *WifiGetStatusResponse) GetPingLatencyMs() float32 {
	if x != nil {
		return x.PingLatencyMs
	}
	return 0
}

func (x *WifiGetStatusResponse) GetRxInvalidNwid_2Ghz_1MRate() float32 {
	if x != nil {
		return x.RxInvalidNwid_2Ghz_1MRate
	}
	return 0
}

func (x *WifiGetStatusResponse) GetRxInvalidNwid_5Ghz_1MRate() float32 {
	if x != nil {
		return x.RxInvalidNwid_5Ghz_1MRate
	}
	return 0
}

func (x *WifiGetStatusResponse) GetMeshStates() map[string]*MeshState {
	if x != nil {
		return x.MeshStates
	}
	return nil
}

type WifiAuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge *SignedData `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *WifiAuthenticateRequest) Reset() {
	*x = WifiAuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiAuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiAuthenticateRequest) ProtoMessage() {}

func (x *WifiAuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiAuthenticateRequest.ProtoReflect.Descriptor instead.
func (*WifiAuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{17}
}

func (x *WifiAuthenticateRequest) GetChallenge() *SignedData {
	if x != nil {
		return x.Challenge
	}
	return nil
}

type WifiAuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wifi *ChallengeResponse `protobuf:"bytes,1,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Dish *ChallengeResponse `protobuf:"bytes,2,opt,name=dish,proto3" json:"dish,omitempty"`
}

func (x *WifiAuthenticateResponse) Reset() {
	*x = WifiAuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiAuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiAuthenticateResponse) ProtoMessage() {}

func (x *WifiAuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiAuthenticateResponse.ProtoReflect.Descriptor instead.
func (*WifiAuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{18}
}

func (x *WifiAuthenticateResponse) GetWifi() *ChallengeResponse {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *WifiAuthenticateResponse) GetDish() *ChallengeResponse {
	if x != nil {
		return x.Dish
	}
	return nil
}

type WifiAccountBondingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DishId string `protobuf:"bytes,1,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
}

func (x *WifiAccountBondingEvent) Reset() {
	*x = WifiAccountBondingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiAccountBondingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiAccountBondingEvent) ProtoMessage() {}

func (x *WifiAccountBondingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiAccountBondingEvent.ProtoReflect.Descriptor instead.
func (*WifiAccountBondingEvent) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{19}
}

func (x *WifiAccountBondingEvent) GetDishId() string {
	if x != nil {
		return x.DishId
	}
	return ""
}

type PingMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatencyMeanMs               float32 `protobuf:"fixed32,1,opt,name=latency_mean_ms,json=latencyMeanMs,proto3" json:"latency_mean_ms,omitempty"`
	LatencyStddevMs             float32 `protobuf:"fixed32,2,opt,name=latency_stddev_ms,json=latencyStddevMs,proto3" json:"latency_stddev_ms,omitempty"`
	LatencyMeanMs_5M            float32 `protobuf:"fixed32,3,opt,name=latency_mean_ms_5m,json=latencyMeanMs5m,proto3" json:"latency_mean_ms_5m,omitempty"`
	LatencyMeanMs_1H            float32 `protobuf:"fixed32,4,opt,name=latency_mean_ms_1h,json=latencyMeanMs1h,proto3" json:"latency_mean_ms_1h,omitempty"`
	LatencyMeanMs_1D            float32 `protobuf:"fixed32,5,opt,name=latency_mean_ms_1d,json=latencyMeanMs1d,proto3" json:"latency_mean_ms_1d,omitempty"`
	DropRate                    float32 `protobuf:"fixed32,6,opt,name=drop_rate,json=dropRate,proto3" json:"drop_rate,omitempty"`
	DropRate_5M                 float32 `protobuf:"fixed32,7,opt,name=drop_rate_5m,json=dropRate5m,proto3" json:"drop_rate_5m,omitempty"`
	DropRate_1H                 float32 `protobuf:"fixed32,8,opt,name=drop_rate_1h,json=dropRate1h,proto3" json:"drop_rate_1h,omitempty"`
	DropRate_1D                 float32 `protobuf:"fixed32,9,opt,name=drop_rate_1d,json=dropRate1d,proto3" json:"drop_rate_1d,omitempty"`
	SecondsSinceLastSuccess     float32 `protobuf:"fixed32,10,opt,name=seconds_since_last_success,json=secondsSinceLastSuccess,proto3" json:"seconds_since_last_success,omitempty"`
	SecondsSinceLast_1SOutage   float32 `protobuf:"fixed32,11,opt,name=seconds_since_last_1s_outage,json=secondsSinceLast1sOutage,proto3" json:"seconds_since_last_1s_outage,omitempty"`
	SecondsSinceLast_2SOutage   float32 `protobuf:"fixed32,15,opt,name=seconds_since_last_2s_outage,json=secondsSinceLast2sOutage,proto3" json:"seconds_since_last_2s_outage,omitempty"`
	SecondsSinceLast_5SOutage   float32 `protobuf:"fixed32,12,opt,name=seconds_since_last_5s_outage,json=secondsSinceLast5sOutage,proto3" json:"seconds_since_last_5s_outage,omitempty"`
	SecondsSinceLast_15SOutage  float32 `protobuf:"fixed32,18,opt,name=seconds_since_last_15s_outage,json=secondsSinceLast15sOutage,proto3" json:"seconds_since_last_15s_outage,omitempty"`
	SecondsSinceLast_60SOutage  float32 `protobuf:"fixed32,19,opt,name=seconds_since_last_60s_outage,json=secondsSinceLast60sOutage,proto3" json:"seconds_since_last_60s_outage,omitempty"`
	SecondsSinceLast_300SOutage float32 `protobuf:"fixed32,20,opt,name=seconds_since_last_300s_outage,json=secondsSinceLast300sOutage,proto3" json:"seconds_since_last_300s_outage,omitempty"`
	HappyHours_1S_1D            float32 `protobuf:"fixed32,13,opt,name=happy_hours_1s_1d,json=happyHours1s1d,proto3" json:"happy_hours_1s_1d,omitempty"`
	HappyHours_2S_1D            float32 `protobuf:"fixed32,16,opt,name=happy_hours_2s_1d,json=happyHours2s1d,proto3" json:"happy_hours_2s_1d,omitempty"`
	HappyHours_5S_1D            float32 `protobuf:"fixed32,14,opt,name=happy_hours_5s_1d,json=happyHours5s1d,proto3" json:"happy_hours_5s_1d,omitempty"`
}

func (x *PingMetrics) Reset() {
	*x = PingMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingMetrics) ProtoMessage() {}

func (x *PingMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingMetrics.ProtoReflect.Descriptor instead.
func (*PingMetrics) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{20}
}

func (x *PingMetrics) GetLatencyMeanMs() float32 {
	if x != nil {
		return x.LatencyMeanMs
	}
	return 0
}

func (x *PingMetrics) GetLatencyStddevMs() float32 {
	if x != nil {
		return x.LatencyStddevMs
	}
	return 0
}

func (x *PingMetrics) GetLatencyMeanMs_5M() float32 {
	if x != nil {
		return x.LatencyMeanMs_5M
	}
	return 0
}

func (x *PingMetrics) GetLatencyMeanMs_1H() float32 {
	if x != nil {
		return x.LatencyMeanMs_1H
	}
	return 0
}

func (x *PingMetrics) GetLatencyMeanMs_1D() float32 {
	if x != nil {
		return x.LatencyMeanMs_1D
	}
	return 0
}

func (x *PingMetrics) GetDropRate() float32 {
	if x != nil {
		return x.DropRate
	}
	return 0
}

func (x *PingMetrics) GetDropRate_5M() float32 {
	if x != nil {
		return x.DropRate_5M
	}
	return 0
}

func (x *PingMetrics) GetDropRate_1H() float32 {
	if x != nil {
		return x.DropRate_1H
	}
	return 0
}

func (x *PingMetrics) GetDropRate_1D() float32 {
	if x != nil {
		return x.DropRate_1D
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLastSuccess() float32 {
	if x != nil {
		return x.SecondsSinceLastSuccess
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_1SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_1SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_2SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_2SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_5SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_5SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_15SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_15SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_60SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_60SOutage
	}
	return 0
}

func (x *PingMetrics) GetSecondsSinceLast_300SOutage() float32 {
	if x != nil {
		return x.SecondsSinceLast_300SOutage
	}
	return 0
}

func (x *PingMetrics) GetHappyHours_1S_1D() float32 {
	if x != nil {
		return x.HappyHours_1S_1D
	}
	return 0
}

func (x *PingMetrics) GetHappyHours_2S_1D() float32 {
	if x != nil {
		return x.HappyHours_2S_1D
	}
	return 0
}

func (x *PingMetrics) GetHappyHours_5S_1D() float32 {
	if x != nil {
		return x.HappyHours_5S_1D
	}
	return 0
}

type WifiGetPingMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiGetPingMetricsRequest) Reset() {
	*x = WifiGetPingMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetPingMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetPingMetricsRequest) ProtoMessage() {}

func (x *WifiGetPingMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetPingMetricsRequest.ProtoReflect.Descriptor instead.
func (*WifiGetPingMetricsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{21}
}

type WifiGetPingMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Internet *PingMetrics `protobuf:"bytes,1,opt,name=internet,proto3" json:"internet,omitempty"`
}

func (x *WifiGetPingMetricsResponse) Reset() {
	*x = WifiGetPingMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetPingMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetPingMetricsResponse) ProtoMessage() {}

func (x *WifiGetPingMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetPingMetricsResponse.ProtoReflect.Descriptor instead.
func (*WifiGetPingMetricsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{22}
}

func (x *WifiGetPingMetricsResponse) GetInternet() *PingMetrics {
	if x != nil {
		return x.Internet
	}
	return nil
}

type WifiGetDiagnosticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiGetDiagnosticsRequest) Reset() {
	*x = WifiGetDiagnosticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetDiagnosticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetDiagnosticsRequest) ProtoMessage() {}

func (x *WifiGetDiagnosticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetDiagnosticsRequest.ProtoReflect.Descriptor instead.
func (*WifiGetDiagnosticsRequest) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{23}
}

type WifiGetDiagnosticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkScan  *WifiScanResults `protobuf:"bytes,1,opt,name=network_scan,json=networkScan,proto3" json:"network_scan,omitempty"`
	WifiNetworks []*WifiNetwork   `protobuf:"bytes,2,rep,name=wifi_networks,json=wifiNetworks,proto3" json:"wifi_networks,omitempty"`
}

func (x *WifiGetDiagnosticsResponse) Reset() {
	*x = WifiGetDiagnosticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetDiagnosticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetDiagnosticsResponse) ProtoMessage() {}

func (x *WifiGetDiagnosticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetDiagnosticsResponse.ProtoReflect.Descriptor instead.
func (*WifiGetDiagnosticsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{24}
}

func (x *WifiGetDiagnosticsResponse) GetNetworkScan() *WifiScanResults {
	if x != nil {
		return x.NetworkScan
	}
	return nil
}

func (x *WifiGetDiagnosticsResponse) GetWifiNetworks() []*WifiNetwork {
	if x != nil {
		return x.WifiNetworks
	}
	return nil
}

type WifiScanResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*WifiScanResults_Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
}

func (x *WifiScanResults) Reset() {
	*x = WifiScanResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiScanResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiScanResults) ProtoMessage() {}

func (x *WifiScanResults) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiScanResults.ProtoReflect.Descriptor instead.
func (*WifiScanResults) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{25}
}

func (x *WifiScanResults) GetNetworks() []*WifiScanResults_Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type WifiNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Band              WifiNetwork_Band `protobuf:"varint,1,opt,name=band,proto3,enum=SpaceX.API.Device.WifiNetwork_Band" json:"band,omitempty"`
	Ssid              string           `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Channel           uint32           `protobuf:"varint,3,opt,name=channel,proto3" json:"channel,omitempty"`
	EncryptionTypeStr string           `protobuf:"bytes,4,opt,name=encryption_type_str,json=encryptionTypeStr,proto3" json:"encryption_type_str,omitempty"`
}

func (x *WifiNetwork) Reset() {
	*x = WifiNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNetwork) ProtoMessage() {}

func (x *WifiNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNetwork.ProtoReflect.Descriptor instead.
func (*WifiNetwork) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{26}
}

func (x *WifiNetwork) GetBand() WifiNetwork_Band {
	if x != nil {
		return x.Band
	}
	return WifiNetwork_WIFI_UNKNOWN
}

func (x *WifiNetwork) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiNetwork) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *WifiNetwork) GetEncryptionTypeStr() string {
	if x != nil {
		return x.EncryptionTypeStr
	}
	return ""
}

type WifiPersistentStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FactoryResetButton               *WifiPersistentStats_Event `protobuf:"bytes,1,opt,name=factory_reset_button,json=factoryResetButton,proto3" json:"factory_reset_button,omitempty"`
	FactoryResetPlugUnplug           *WifiPersistentStats_Event `protobuf:"bytes,2,opt,name=factory_reset_plug_unplug,json=factoryResetPlugUnplug,proto3" json:"factory_reset_plug_unplug,omitempty"`
	FactoryResetCommand              *WifiPersistentStats_Event `protobuf:"bytes,3,opt,name=factory_reset_command,json=factoryResetCommand,proto3" json:"factory_reset_command,omitempty"`
	FactoryResetFailedLoadWifiConfig *WifiPersistentStats_Event `protobuf:"bytes,4,opt,name=factory_reset_failed_load_wifi_config,json=factoryResetFailedLoadWifiConfig,proto3" json:"factory_reset_failed_load_wifi_config,omitempty"`
	RebootFromSoftwareUpdate         *WifiPersistentStats_Event `protobuf:"bytes,5,opt,name=reboot_from_software_update,json=rebootFromSoftwareUpdate,proto3" json:"reboot_from_software_update,omitempty"`
}

func (x *WifiPersistentStats) Reset() {
	*x = WifiPersistentStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiPersistentStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiPersistentStats) ProtoMessage() {}

func (x *WifiPersistentStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiPersistentStats.ProtoReflect.Descriptor instead.
func (*WifiPersistentStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{27}
}

func (x *WifiPersistentStats) GetFactoryResetButton() *WifiPersistentStats_Event {
	if x != nil {
		return x.FactoryResetButton
	}
	return nil
}

func (x *WifiPersistentStats) GetFactoryResetPlugUnplug() *WifiPersistentStats_Event {
	if x != nil {
		return x.FactoryResetPlugUnplug
	}
	return nil
}

func (x *WifiPersistentStats) GetFactoryResetCommand() *WifiPersistentStats_Event {
	if x != nil {
		return x.FactoryResetCommand
	}
	return nil
}

func (x *WifiPersistentStats) GetFactoryResetFailedLoadWifiConfig() *WifiPersistentStats_Event {
	if x != nil {
		return x.FactoryResetFailedLoadWifiConfig
	}
	return nil
}

func (x *WifiPersistentStats) GetRebootFromSoftwareUpdate() *WifiPersistentStats_Event {
	if x != nil {
		return x.RebootFromSoftwareUpdate
	}
	return nil
}

type WifiGetPersistentStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats *WifiPersistentStats `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *WifiGetPersistentStatsResponse) Reset() {
	*x = WifiGetPersistentStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiGetPersistentStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiGetPersistentStatsResponse) ProtoMessage() {}

func (x *WifiGetPersistentStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiGetPersistentStatsResponse.ProtoReflect.Descriptor instead.
func (*WifiGetPersistentStatsResponse) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{28}
}

func (x *WifiGetPersistentStatsResponse) GetStats() *WifiPersistentStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type WifiClient_RxStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes       uint64 `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	CountErrors uint64 `protobuf:"varint,2,opt,name=count_errors,json=countErrors,proto3" json:"count_errors,omitempty"`
	Nss         int32  `protobuf:"varint,3,opt,name=nss,proto3" json:"nss,omitempty"`
	Rate        uint32 `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *WifiClient_RxStats) Reset() {
	*x = WifiClient_RxStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiClient_RxStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient_RxStats) ProtoMessage() {}

func (x *WifiClient_RxStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient_RxStats.ProtoReflect.Descriptor instead.
func (*WifiClient_RxStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{13, 0}
}

func (x *WifiClient_RxStats) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *WifiClient_RxStats) GetCountErrors() uint64 {
	if x != nil {
		return x.CountErrors
	}
	return 0
}

func (x *WifiClient_RxStats) GetNss() int32 {
	if x != nil {
		return x.Nss
	}
	return 0
}

func (x *WifiClient_RxStats) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type WifiClient_TxStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes        uint64 `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	SuccessBytes uint64 `protobuf:"varint,2,opt,name=success_bytes,json=successBytes,proto3" json:"success_bytes,omitempty"`
	Nss          int32  `protobuf:"varint,3,opt,name=nss,proto3" json:"nss,omitempty"`
	Rate         uint32 `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *WifiClient_TxStats) Reset() {
	*x = WifiClient_TxStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiClient_TxStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiClient_TxStats) ProtoMessage() {}

func (x *WifiClient_TxStats) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiClient_TxStats.ProtoReflect.Descriptor instead.
func (*WifiClient_TxStats) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{13, 1}
}

func (x *WifiClient_TxStats) GetBytes() uint64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *WifiClient_TxStats) GetSuccessBytes() uint64 {
	if x != nil {
		return x.SuccessBytes
	}
	return 0
}

func (x *WifiClient_TxStats) GetNss() int32 {
	if x != nil {
		return x.Nss
	}
	return 0
}

func (x *WifiClient_TxStats) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type WifiScanResults_Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source           WifiScanResults_Network_Source `protobuf:"varint,1,opt,name=source,proto3,enum=SpaceX.API.Device.WifiScanResults_Network_Source" json:"source,omitempty"`
	Ssid             string                         `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Bssid            string                         `protobuf:"bytes,3,opt,name=bssid,proto3" json:"bssid,omitempty"`
	FrequencyGhz     string                         `protobuf:"bytes,4,opt,name=frequency_ghz,json=frequencyGhz,proto3" json:"frequency_ghz,omitempty"`
	Channel          int32                          `protobuf:"varint,5,opt,name=channel,proto3" json:"channel,omitempty"`
	SignalLevelDbm   int32                          `protobuf:"varint,6,opt,name=signal_level_dbm,json=signalLevelDbm,proto3" json:"signal_level_dbm,omitempty"`
	NoiseLevelDbm    int32                          `protobuf:"varint,7,opt,name=noise_level_dbm,json=noiseLevelDbm,proto3" json:"noise_level_dbm,omitempty"`
	HasEncryptionKey bool                           `protobuf:"varint,8,opt,name=has_encryption_key,json=hasEncryptionKey,proto3" json:"has_encryption_key,omitempty"`
	PhyModeStr       string                         `protobuf:"bytes,9,opt,name=phy_mode_str,json=phyModeStr,proto3" json:"phy_mode_str,omitempty"`
}

func (x *WifiScanResults_Network) Reset() {
	*x = WifiScanResults_Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiScanResults_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiScanResults_Network) ProtoMessage() {}

func (x *WifiScanResults_Network) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiScanResults_Network.ProtoReflect.Descriptor instead.
func (*WifiScanResults_Network) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{25, 0}
}

func (x *WifiScanResults_Network) GetSource() WifiScanResults_Network_Source {
	if x != nil {
		return x.Source
	}
	return WifiScanResults_Network_UNKNOWN
}

func (x *WifiScanResults_Network) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiScanResults_Network) GetBssid() string {
	if x != nil {
		return x.Bssid
	}
	return ""
}

func (x *WifiScanResults_Network) GetFrequencyGhz() string {
	if x != nil {
		return x.FrequencyGhz
	}
	return ""
}

func (x *WifiScanResults_Network) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *WifiScanResults_Network) GetSignalLevelDbm() int32 {
	if x != nil {
		return x.SignalLevelDbm
	}
	return 0
}

func (x *WifiScanResults_Network) GetNoiseLevelDbm() int32 {
	if x != nil {
		return x.NoiseLevelDbm
	}
	return 0
}

func (x *WifiScanResults_Network) GetHasEncryptionKey() bool {
	if x != nil {
		return x.HasEncryptionKey
	}
	return false
}

func (x *WifiScanResults_Network) GetPhyModeStr() string {
	if x != nil {
		return x.PhyModeStr
	}
	return ""
}

type WifiPersistentStats_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count                 uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	LastOccurredTimestamp int64  `protobuf:"varint,2,opt,name=last_occurred_timestamp,json=lastOccurredTimestamp,proto3" json:"last_occurred_timestamp,omitempty"`
}

func (x *WifiPersistentStats_Event) Reset() {
	*x = WifiPersistentStats_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacex_api_device_wifi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiPersistentStats_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiPersistentStats_Event) ProtoMessage() {}

func (x *WifiPersistentStats_Event) ProtoReflect() protoreflect.Message {
	mi := &file_spacex_api_device_wifi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiPersistentStats_Event.ProtoReflect.Descriptor instead.
func (*WifiPersistentStats_Event) Descriptor() ([]byte, []int) {
	return file_spacex_api_device_wifi_proto_rawDescGZIP(), []int{27, 0}
}

func (x *WifiPersistentStats_Event) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WifiPersistentStats_Event) GetLastOccurredTimestamp() int64 {
	if x != nil {
		return x.LastOccurredTimestamp
	}
	return 0
}

var File_spacex_api_device_wifi_proto protoreflect.FileDescriptor

var file_spacex_api_device_wifi_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x77, 0x69, 0x66, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x1e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x23, 0x73, 0x70, 0x61, 0x63, 0x65, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f,
	0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x56, 0x0a, 0x14, 0x57, 0x69, 0x66, 0x69,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x0b, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41,
	0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x66, 0x0a, 0x15, 0x57, 0x69, 0x66, 0x69, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e,
	0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x57, 0x69,
	0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x16, 0x0a, 0x14, 0x57, 0x69, 0x66, 0x69,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x57, 0x0a, 0x15, 0x57, 0x69, 0x66, 0x69, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x77, 0x69, 0x66,
	0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x77,
	0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1d, 0x0a, 0x1b, 0x57, 0x69, 0x66,
	0x69, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x1c, 0x57, 0x69, 0x66, 0x69,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x77, 0x69, 0x66, 0x69,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x77, 0x69,
	0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x6d, 0x0a, 0x1d, 0x57, 0x69, 0x66, 0x69,
	0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50,
	0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x20, 0x0a, 0x1e, 0x57, 0x69, 0x66, 0x69, 0x53,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x57, 0x69, 0x66,
	0x69, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x51, 0x0a, 0x16, 0x57, 0x69, 0x66, 0x69, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x57, 0x69, 0x66, 0x69, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0xe9, 0x07, 0x20,
	0x03, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x6d, 0x73, 0x18, 0xea, 0x07, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x69, 0x6e,
	0x67, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x73, 0x22, 0x54, 0x0a, 0x1b, 0x57, 0x69,
	0x66, 0x69, 0x4e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69,
	0x66, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x22, 0xf5, 0x05, 0x0a, 0x0a, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x40, 0x0a, 0x08, 0x72, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x78, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x07, 0x72, 0x78, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41,
	0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x07, 0x74, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x12, 0x3d, 0x0a, 0x05,
	0x69, 0x66, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x57, 0x69, 0x66, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x52, 0x05, 0x69, 0x66, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x6e, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x73, 0x6e, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x73, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x73, 0x6d, 0x6f, 0x64, 0x65, 0x1a, 0x68, 0x0a, 0x07, 0x52, 0x78, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x1a,
	0x6a, 0x0a, 0x07, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x3b, 0x0a, 0x09, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x54, 0x48, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x46, 0x5f, 0x32, 0x47, 0x48, 0x5a, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x46, 0x5f, 0x35, 0x47, 0x48, 0x5a, 0x10, 0x03, 0x22, 0x74, 0x0a, 0x10, 0x57, 0x69, 0x66, 0x69,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70,
	0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x13,
	0x0a, 0x11, 0x57, 0x69, 0x66, 0x69, 0x53, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xf9, 0x05, 0x0a, 0x15, 0x57, 0x69, 0x66, 0x69, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x63, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x63, 0x61, 0x70, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58,
	0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x03, 0x73, 0x6b, 0x75,
	0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x29, 0x0a, 0x10,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x77, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x70, 0x76, 0x34, 0x57, 0x61, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0xec, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d,
	0x73, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x73, 0x12, 0x3e, 0x0a, 0x1c, 0x72, 0x78, 0x5f, 0x69, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6e, 0x77, 0x69, 0x64, 0x5f, 0x32, 0x67, 0x68, 0x7a, 0x5f,
	0x31, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0xee, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17,
	0x72, 0x78, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x77, 0x69, 0x64, 0x32, 0x67, 0x68,
	0x7a, 0x31, 0x6d, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x72, 0x78, 0x5f, 0x69, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6e, 0x77, 0x69, 0x64, 0x5f, 0x35, 0x67, 0x68, 0x7a, 0x5f,
	0x31, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0xef, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17,
	0x72, 0x78, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4e, 0x77, 0x69, 0x64, 0x35, 0x67, 0x68,
	0x7a, 0x31, 0x6d, 0x52, 0x61, 0x74, 0x65, 0x12, 0x59, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x68, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x57, 0x69, 0x66, 0x69, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x1a, 0x5b, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e,
	0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x56, 0x0a, 0x17, 0x57, 0x69, 0x66, 0x69, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x57, 0x69, 0x66, 0x69,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x38,
	0x0a, 0x04, 0x64, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x04, 0x64, 0x69, 0x73, 0x68, 0x22, 0x32, 0x0a, 0x17, 0x57, 0x69, 0x66, 0x69,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x73, 0x68, 0x49, 0x64, 0x22, 0xb1, 0x07, 0x0a,
	0x0b, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x65,
	0x61, 0x6e, 0x4d, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x64, 0x64, 0x65, 0x76, 0x4d, 0x73,
	0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x65, 0x61, 0x6e,
	0x5f, 0x6d, 0x73, 0x5f, 0x35, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x65, 0x61, 0x6e, 0x4d, 0x73, 0x35, 0x6d, 0x12, 0x2b, 0x0a,
	0x12, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x6d, 0x73,
	0x5f, 0x31, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x4d, 0x65, 0x61, 0x6e, 0x4d, 0x73, 0x31, 0x68, 0x12, 0x2b, 0x0a, 0x12, 0x6c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x5f, 0x6d, 0x73, 0x5f, 0x31, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x4d,
	0x65, 0x61, 0x6e, 0x4d, 0x73, 0x31, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x35, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x35, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x31, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x72,
	0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x31, 0x68, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x31, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x64, 0x72, 0x6f, 0x70, 0x52, 0x61, 0x74, 0x65, 0x31, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x73,
	0x5f, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x31,
	0x73, 0x4f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x32, 0x73,
	0x5f, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x32,
	0x73, 0x4f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x35, 0x73,
	0x5f, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x18, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x35,
	0x73, 0x4f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x1d, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x31, 0x35,
	0x73, 0x5f, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61, 0x73, 0x74,
	0x31, 0x35, 0x73, 0x4f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x1d, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x36, 0x30, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x19, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x4c, 0x61,
	0x73, 0x74, 0x36, 0x30, 0x73, 0x4f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x33, 0x30, 0x30, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x1a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x53, 0x69, 0x6e, 0x63,
	0x65, 0x4c, 0x61, 0x73, 0x74, 0x33, 0x30, 0x30, 0x73, 0x4f, 0x75, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x29, 0x0a, 0x11, 0x68, 0x61, 0x70, 0x70, 0x79, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x31,
	0x73, 0x5f, 0x31, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x68, 0x61, 0x70, 0x70,
	0x79, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x31, 0x73, 0x31, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x68, 0x61,
	0x70, 0x70, 0x79, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x5f, 0x32, 0x73, 0x5f, 0x31, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x68, 0x61, 0x70, 0x70, 0x79, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x32, 0x73, 0x31, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x68, 0x61, 0x70, 0x70, 0x79, 0x5f, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x5f, 0x35, 0x73, 0x5f, 0x31, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x68, 0x61, 0x70, 0x70, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x35, 0x73, 0x31, 0x64,
	0x22, 0x1b, 0x0a, 0x19, 0x57, 0x69, 0x66, 0x69, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x58, 0x0a,
	0x1a, 0x57, 0x69, 0x66, 0x69, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x57, 0x69, 0x66, 0x69, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x1a, 0x57, 0x69, 0x66, 0x69, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73,
	0x63, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69,
	0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x0b, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x43, 0x0a, 0x0d, 0x77, 0x69,
	0x66, 0x69, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x0c, 0x77, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22,
	0xf2, 0x03, 0x0a, 0x0f, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41,
	0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x1a, 0x96, 0x03, 0x0a, 0x07,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58,
	0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x73, 0x73, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x73, 0x73, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x67, 0x68, 0x7a, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x47, 0x68,
	0x7a, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x62, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x44, 0x62, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x69, 0x73, 0x65, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x62, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x6e, 0x6f, 0x69, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x62, 0x6d, 0x12, 0x2c, 0x0a,
	0x12, 0x68, 0x61, 0x73, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x73, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x70,
	0x68, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x68, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x72, 0x22, 0x35, 0x0a,
	0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x32, 0x5f, 0x34,
	0x47, 0x48, 0x5a, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x35, 0x47,
	0x48, 0x5a, 0x10, 0x02, 0x22, 0xde, 0x01, 0x0a, 0x0b, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x37, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x42, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73,
	0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x22, 0x38, 0x0a, 0x04, 0x42,
	0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x32, 0x5f,
	0x34, 0x47, 0x48, 0x5a, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x49, 0x46, 0x49, 0x5f, 0x35,
	0x47, 0x48, 0x5a, 0x10, 0x02, 0x22, 0x83, 0x05, 0x0a, 0x13, 0x57, 0x69, 0x66, 0x69, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x5e, 0x0a,
	0x14, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x57, 0x69, 0x66, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x67, 0x0a,
	0x19, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x6c, 0x75, 0x67, 0x5f, 0x75, 0x6e, 0x70, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x16,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67,
	0x55, 0x6e, 0x70, 0x6c, 0x75, 0x67, 0x12, 0x60, 0x0a, 0x15, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41,
	0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x13, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x7d, 0x0a, 0x25, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x58,
	0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x66, 0x69,
	0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x20, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x57, 0x69, 0x66,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6b, 0x0a, 0x1b, 0x72, 0x65, 0x62, 0x6f, 0x6f,
	0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x18, 0x72, 0x65, 0x62, 0x6f,
	0x6f, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x1a, 0x55, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5e, 0x0a, 0x1e, 0x57,
	0x69, 0x66, 0x69, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x58, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x57, 0x69, 0x66, 0x69, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x42, 0x17, 0x5a, 0x15, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spacex_api_device_wifi_proto_rawDescOnce sync.Once
	file_spacex_api_device_wifi_proto_rawDescData = file_spacex_api_device_wifi_proto_rawDesc
)

func file_spacex_api_device_wifi_proto_rawDescGZIP() []byte {
	file_spacex_api_device_wifi_proto_rawDescOnce.Do(func() {
		file_spacex_api_device_wifi_proto_rawDescData = protoimpl.X.CompressGZIP(file_spacex_api_device_wifi_proto_rawDescData)
	})
	return file_spacex_api_device_wifi_proto_rawDescData
}

var file_spacex_api_device_wifi_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spacex_api_device_wifi_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_spacex_api_device_wifi_proto_goTypes = []interface{}{
	(WifiClient_Interface)(0),              // 0: SpaceX.API.Device.WifiClient.Interface
	(WifiScanResults_Network_Source)(0),    // 1: SpaceX.API.Device.WifiScanResults.Network.Source
	(WifiNetwork_Band)(0),                  // 2: SpaceX.API.Device.WifiNetwork.Band
	(*MeshState)(nil),                      // 3: SpaceX.API.Device.MeshState
	(*WifiSetConfigRequest)(nil),           // 4: SpaceX.API.Device.WifiSetConfigRequest
	(*WifiSetConfigResponse)(nil),          // 5: SpaceX.API.Device.WifiSetConfigResponse
	(*WifiGetConfigRequest)(nil),           // 6: SpaceX.API.Device.WifiGetConfigRequest
	(*WifiGetConfigResponse)(nil),          // 7: SpaceX.API.Device.WifiGetConfigResponse
	(*WifiGetNetworkConfigRequest)(nil),    // 8: SpaceX.API.Device.WifiGetNetworkConfigRequest
	(*WifiGetNetworkConfigResponse)(nil),   // 9: SpaceX.API.Device.WifiGetNetworkConfigResponse
	(*WifiSetMeshDeviceTrustRequest)(nil),  // 10: SpaceX.API.Device.WifiSetMeshDeviceTrustRequest
	(*WifiSetMeshDeviceTrustResponse)(nil), // 11: SpaceX.API.Device.WifiSetMeshDeviceTrustResponse
	(*WifiGetClientsRequest)(nil),          // 12: SpaceX.API.Device.WifiGetClientsRequest
	(*WifiGetClientsResponse)(nil),         // 13: SpaceX.API.Device.WifiGetClientsResponse
	(*WifiGetHistoryResponse)(nil),         // 14: SpaceX.API.Device.WifiGetHistoryResponse
	(*WifiNewClientConnectedEvent)(nil),    // 15: SpaceX.API.Device.WifiNewClientConnectedEvent
	(*WifiClient)(nil),                     // 16: SpaceX.API.Device.WifiClient
	(*WifiSetupRequest)(nil),               // 17: SpaceX.API.Device.WifiSetupRequest
	(*WifiSetupResponse)(nil),              // 18: SpaceX.API.Device.WifiSetupResponse
	(*WifiGetStatusResponse)(nil),          // 19: SpaceX.API.Device.WifiGetStatusResponse
	(*WifiAuthenticateRequest)(nil),        // 20: SpaceX.API.Device.WifiAuthenticateRequest
	(*WifiAuthenticateResponse)(nil),       // 21: SpaceX.API.Device.WifiAuthenticateResponse
	(*WifiAccountBondingEvent)(nil),        // 22: SpaceX.API.Device.WifiAccountBondingEvent
	(*PingMetrics)(nil),                    // 23: SpaceX.API.Device.PingMetrics
	(*WifiGetPingMetricsRequest)(nil),      // 24: SpaceX.API.Device.WifiGetPingMetricsRequest
	(*WifiGetPingMetricsResponse)(nil),     // 25: SpaceX.API.Device.WifiGetPingMetricsResponse
	(*WifiGetDiagnosticsRequest)(nil),      // 26: SpaceX.API.Device.WifiGetDiagnosticsRequest
	(*WifiGetDiagnosticsResponse)(nil),     // 27: SpaceX.API.Device.WifiGetDiagnosticsResponse
	(*WifiScanResults)(nil),                // 28: SpaceX.API.Device.WifiScanResults
	(*WifiNetwork)(nil),                    // 29: SpaceX.API.Device.WifiNetwork
	(*WifiPersistentStats)(nil),            // 30: SpaceX.API.Device.WifiPersistentStats
	(*WifiGetPersistentStatsResponse)(nil), // 31: SpaceX.API.Device.WifiGetPersistentStatsResponse
	(*WifiClient_RxStats)(nil),             // 32: SpaceX.API.Device.WifiClient.RxStats
	(*WifiClient_TxStats)(nil),             // 33: SpaceX.API.Device.WifiClient.TxStats
	nil,                                    // 34: SpaceX.API.Device.WifiGetStatusResponse.MeshStatesEntry
	(*WifiScanResults_Network)(nil),        // 35: SpaceX.API.Device.WifiScanResults.Network
	(*WifiPersistentStats_Event)(nil),      // 36: SpaceX.API.Device.WifiPersistentStats.Event
	(MeshAuth)(0),                          // 37: SpaceX.API.Device.MeshAuth
	(*WifiConfig)(nil),                     // 38: SpaceX.API.Device.WifiConfig
	(*DeviceInfo)(nil),                     // 39: SpaceX.API.Device.DeviceInfo
	(*DeviceState)(nil),                    // 40: SpaceX.API.Device.DeviceState
	(*SignedData)(nil),                     // 41: SpaceX.API.Device.SignedData
	(*ChallengeResponse)(nil),              // 42: SpaceX.API.Device.ChallengeResponse
}
var file_spacex_api_device_wifi_proto_depIdxs = []int32{
	37, // 0: SpaceX.API.Device.MeshState.auth:type_name -> SpaceX.API.Device.MeshAuth
	38, // 1: SpaceX.API.Device.WifiSetConfigRequest.wifi_config:type_name -> SpaceX.API.Device.WifiConfig
	38, // 2: SpaceX.API.Device.WifiSetConfigResponse.updated_wifi_config:type_name -> SpaceX.API.Device.WifiConfig
	38, // 3: SpaceX.API.Device.WifiGetConfigResponse.wifi_config:type_name -> SpaceX.API.Device.WifiConfig
	38, // 4: SpaceX.API.Device.WifiGetNetworkConfigResponse.wifi_config:type_name -> SpaceX.API.Device.WifiConfig
	37, // 5: SpaceX.API.Device.WifiSetMeshDeviceTrustRequest.auth:type_name -> SpaceX.API.Device.MeshAuth
	16, // 6: SpaceX.API.Device.WifiGetClientsResponse.clients:type_name -> SpaceX.API.Device.WifiClient
	16, // 7: SpaceX.API.Device.WifiNewClientConnectedEvent.client:type_name -> SpaceX.API.Device.WifiClient
	32, // 8: SpaceX.API.Device.WifiClient.rx_stats:type_name -> SpaceX.API.Device.WifiClient.RxStats
	33, // 9: SpaceX.API.Device.WifiClient.tx_stats:type_name -> SpaceX.API.Device.WifiClient.TxStats
	0,  // 10: SpaceX.API.Device.WifiClient.iface:type_name -> SpaceX.API.Device.WifiClient.Interface
	39, // 11: SpaceX.API.Device.WifiGetStatusResponse.device_info:type_name -> SpaceX.API.Device.DeviceInfo
	40, // 12: SpaceX.API.Device.WifiGetStatusResponse.device_state:type_name -> SpaceX.API.Device.DeviceState
	16, // 13: SpaceX.API.Device.WifiGetStatusResponse.clients:type_name -> SpaceX.API.Device.WifiClient
	34, // 14: SpaceX.API.Device.WifiGetStatusResponse.mesh_states:type_name -> SpaceX.API.Device.WifiGetStatusResponse.MeshStatesEntry
	41, // 15: SpaceX.API.Device.WifiAuthenticateRequest.challenge:type_name -> SpaceX.API.Device.SignedData
	42, // 16: SpaceX.API.Device.WifiAuthenticateResponse.wifi:type_name -> SpaceX.API.Device.ChallengeResponse
	42, // 17: SpaceX.API.Device.WifiAuthenticateResponse.dish:type_name -> SpaceX.API.Device.ChallengeResponse
	23, // 18: SpaceX.API.Device.WifiGetPingMetricsResponse.internet:type_name -> SpaceX.API.Device.PingMetrics
	28, // 19: SpaceX.API.Device.WifiGetDiagnosticsResponse.network_scan:type_name -> SpaceX.API.Device.WifiScanResults
	29, // 20: SpaceX.API.Device.WifiGetDiagnosticsResponse.wifi_networks:type_name -> SpaceX.API.Device.WifiNetwork
	35, // 21: SpaceX.API.Device.WifiScanResults.networks:type_name -> SpaceX.API.Device.WifiScanResults.Network
	2,  // 22: SpaceX.API.Device.WifiNetwork.band:type_name -> SpaceX.API.Device.WifiNetwork.Band
	36, // 23: SpaceX.API.Device.WifiPersistentStats.factory_reset_button:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	36, // 24: SpaceX.API.Device.WifiPersistentStats.factory_reset_plug_unplug:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	36, // 25: SpaceX.API.Device.WifiPersistentStats.factory_reset_command:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	36, // 26: SpaceX.API.Device.WifiPersistentStats.factory_reset_failed_load_wifi_config:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	36, // 27: SpaceX.API.Device.WifiPersistentStats.reboot_from_software_update:type_name -> SpaceX.API.Device.WifiPersistentStats.Event
	30, // 28: SpaceX.API.Device.WifiGetPersistentStatsResponse.stats:type_name -> SpaceX.API.Device.WifiPersistentStats
	3,  // 29: SpaceX.API.Device.WifiGetStatusResponse.MeshStatesEntry.value:type_name -> SpaceX.API.Device.MeshState
	1,  // 30: SpaceX.API.Device.WifiScanResults.Network.source:type_name -> SpaceX.API.Device.WifiScanResults.Network.Source
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_spacex_api_device_wifi_proto_init() }
func file_spacex_api_device_wifi_proto_init() {
	if File_spacex_api_device_wifi_proto != nil {
		return
	}
	file_spacex_api_device_common_proto_init()
	file_spacex_api_device_wifi_config_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_spacex_api_device_wifi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeshState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiSetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiSetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetNetworkConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetNetworkConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiSetMeshDeviceTrustRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiSetMeshDeviceTrustResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetClientsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetClientsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiNewClientConnectedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiSetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiSetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiAuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiAuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiAccountBondingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetPingMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetPingMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetDiagnosticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetDiagnosticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiScanResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiPersistentStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiGetPersistentStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiClient_RxStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiClient_TxStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiScanResults_Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacex_api_device_wifi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiPersistentStats_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spacex_api_device_wifi_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacex_api_device_wifi_proto_goTypes,
		DependencyIndexes: file_spacex_api_device_wifi_proto_depIdxs,
		EnumInfos:         file_spacex_api_device_wifi_proto_enumTypes,
		MessageInfos:      file_spacex_api_device_wifi_proto_msgTypes,
	}.Build()
	File_spacex_api_device_wifi_proto = out.File
	file_spacex_api_device_wifi_proto_rawDesc = nil
	file_spacex_api_device_wifi_proto_goTypes = nil
	file_spacex_api_device_wifi_proto_depIdxs = nil
}
